{"version":3,"sources":["components/JavascriptCalculator.js","components/JavascriptCalculatorDisplay.js","components/JavascriptCalculatorButton.js","serviceWorker.js","index.js"],"names":["JavascriptCalculator","props","_this","Object","C_Users_cabraham_ICICRD2I_Desktop_projects_javascript_calculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","C_Users_cabraham_ICICRD2I_Desktop_projects_javascript_calculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","C_Users_cabraham_ICICRD2I_Desktop_projects_javascript_calculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","display","handleNumber","bind","C_Users_cabraham_ICICRD2I_Desktop_projects_javascript_calculator_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_4__","handleOperator","handleDecimal","handleClear","handleEqual","event","target","innerText","setState","includes","charAt","length","slice","split","reverse","eval","toString","number","operator","decimal","clear","equal","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","reactstrap__WEBPACK_IMPORTED_MODULE_10__","className","_JavascriptCalculatorDisplay__WEBPACK_IMPORTED_MODULE_7__","id","color","_JavascriptCalculatorButton__WEBPACK_IMPORTED_MODULE_8__","value","click","Component","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","JavascriptCalculatorDisplay","reactstrap__WEBPACK_IMPORTED_MODULE_1__","JavascriptCalculatorButton","onClick","Boolean","window","location","hostname","match","ReactDOM","render","react_default","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ea759abf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport JavascriptCalculatorDisplay from './JavascriptCalculatorDisplay';\nimport JavascriptCalculatorButton from './JavascriptCalculatorButton';\nimport './JavascriptCalculator.css';\nimport { Jumbotron } from 'reactstrap';\n\nclass JavascriptCalculator extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tdisplay: '0'\n\t\t}\n\t\tthis.handleNumber = this.handleNumber.bind(this);\n\t\tthis.handleOperator = this.handleOperator.bind(this);\n\t\tthis.handleDecimal = this.handleDecimal.bind(this);\n\t\tthis.handleClear = this.handleClear.bind(this);\n\t\tthis.handleEqual = this.handleEqual.bind(this);\n\t}\n\n\thandleNumber(event) {\n\t\t// number should not begin with multiple zeros\n\t\tif (this.state.display !== '0' || event.target.innerText !== '0') {\n\t\t\tthis.setState({\n\t\t\t\tdisplay: this.state.display + event.target.innerText\n\t\t\t});\n\t\t}\n\t\t// number should not start with zero\n\t\tif (this.state.display === '0') {\n\t\t\tthis.setState({\n\t\t\t\tdisplay: event.target.innerText\n\t\t\t});\n\t\t}\n\t}\n\n\thandleOperator(event) {\n\t\t// if 2 or more operators are entered consecutively, the operation performed should be the last operator entered\n\t\tif (['+', '/', '*', '-'].includes(this.state.display.charAt(this.state.display.length - 1))) {\n\t\t\tthis.setState({\n\t\t\t\tdisplay: this.state.display.slice(0, -1) + event.target.innerText\n\t\t\t});\n\t\t} else {\n\t\t\tthis.setState({\n\t\t\t\tdisplay: this.state.display + event.target.innerText\n\t\t\t});\n\t\t};\n\t}\n\n\thandleDecimal(event) {\n\t\tconst lastNumber = this.state.display.split(/\\+|-|\\/|\\*/).reverse()[0];\n\t\t// two \".\" in one number should not be accepted\n\t\tif (!lastNumber.includes('.')) {\n\t\t\tthis.setState({\n\t\t\t\tdisplay: this.state.display + event.target.innerText\n\t\t\t});\n\t\t}\n\t}\n\n\thandleClear() {\n\t\tthis.setState({\n\t\t\tdisplay: '0'\n\t\t});\n\t}\n\n\thandleEqual() {\n\t\tthis.setState({\n\t\t\tdisplay: eval(this.state.display).toString()\n\t\t});\n\t}\n\n\trender() {\n\t\tconst display = this.state.display;\n\t\tconst number = this.handleNumber;\n\t\tconst operator = this.handleOperator;\n\t\tconst decimal = this.handleDecimal;\n\t\tconst clear = this.handleClear;\n\t\tconst equal = this.handleEqual;\n\t\treturn (\n\t\t\t<Jumbotron className=\"wrapper\">\n\t\t\t\t<JavascriptCalculatorDisplay id=\"display\" display={display} color=\"primary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"zero\" value=\"0\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"one\" value=\"1\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"two\" value=\"2\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"three\" value=\"3\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"four\" value=\"4\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"five\" value=\"5\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"six\" value=\"6\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"seven\" value=\"7\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"eight\" value=\"8\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"nine\" value=\"9\" click={number} color=\"secondary\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"add\" value=\"+\" click={operator} color=\"info\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"subtract\" value=\"-\" click={operator} color=\"info\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"multiply\" value=\"*\" click={operator} color=\"info\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"divide\" value=\"/\" click={operator} color=\"info\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"decimal\" value=\".\" click={decimal} color=\"success\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"clear\" value=\"C\" click={clear} color=\"warning\"/>\n\t\t\t\t<JavascriptCalculatorButton id=\"equals\" value=\"=\" click={equal}/>\n\t\t\t</Jumbotron>\n\t\t);\n\t}\n}\n\nexport default JavascriptCalculator;\n","import React from 'react';\r\n\r\nconst JavascriptCalculatorDisplay = (props) => {\r\n\tconst id = props.id;\r\n\tconst display = props.display;\r\n\treturn (\r\n        <div id={id} className={id + \" d-flex align-items-center justify-content-end bg-white text-truncate p-3\"}>\r\n\t\t\t{display}\r\n\t\t</div>\r\n    );\r\n};\r\n\r\nexport default JavascriptCalculatorDisplay;","import React from 'react';\r\nimport { Button } from 'reactstrap';\r\n\r\nconst JavascriptCalculatorButton = (props) => {\r\n\tconst id = props.id;\r\n\tconst value = props.value;\r\n\tconst click = props.click;\r\n\tconst color = props.color;\r\n    return (\r\n        <Button id={id} className={id} onClick={click} color={color}>\r\n\t\t\t{value}\r\n\t\t</Button>\r\n    );\r\n};\r\n\r\nexport default JavascriptCalculatorButton;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport JavascriptCalculator from './components/JavascriptCalculator';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<JavascriptCalculator />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}